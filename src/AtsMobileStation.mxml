<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="320" height="360" showStatusBar="false"
					   right="0" bottom="0"
					   creationComplete="creationCompleteHandler(event)"
					   close="closeHandler(event)" backgroundColor="0xefefef">
	<fx:Script>
		<![CDATA[
			import com.greensock.TweenMax;
			
			import device.ConnectedDevices;
			import device.Simulator;
			
			import flash.filters.BitmapFilterQuality;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import renderer.AndroidDeviceRenderer;
			
			import spark.filters.DropShadowFilter;
			
			public static const dropShadowFilter:DropShadowFilter = new DropShadowFilter(2.0, 45, 0x000000, 0.1, 10.0, 10.0, 0.9, BitmapFilterQuality.HIGH, false, false, false);

			
			[Bindable]
			private var port:String = "8080";
			
			[Bindable]
			private var connectedDevices:ConnectedDevices;
			
			[Bindable]
			private var simulators:ArrayCollection = new ArrayCollection();
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				//if(Capabilities.os.indexOf("Mac") > -1){
				simulators.addItem(new Simulator("8E70DF80-AC94-466B-AA13-313EC56BAA94", "iphone Xr", "12.4"));
				simulators.addItem(new Simulator("8092FC53-38AB-4308-B2B9-47D0B00F7794", "iphone Xs", "12.4"));
				simulators.addItem(new Simulator("9CE6251F-0B96-4D29-AEB2-454FA2835C1C", "iphone X", "12.4"));
				simulators.addItem(new Simulator("26DCA5DF-1324-48EE-B524-B1751FA3BA3E", "iphone SE", "12.4"));
				//simulators.addItem(new Simulator("00002", "iphone7", "10.2"));	
				//	simulators.addItem(new Simulator("00003", "iphone9", "10.4"));
				//	simulators.addItem(new Simulator("00004", "iphoneX", "10.3"));	
				//}
					
				connectedDevices = new ConnectedDevices(port);
			}
			
			protected function closeHandler(event:Event):void
			{
				connectedDevices.terminate();
			}
			
			protected function clickGroup_clickHandler(event:MouseEvent):void
			{
				if(simulatorsGroup.height == 26){
					TweenMax.to(simulatorsGroup, 0.3, {height:320})
				}else{
					TweenMax.to(simulatorsGroup, 0.3, {height:26})
				}

			}
			
			protected function clickConnected_clickHandler(event:MouseEvent):void
			{
				if(simulatorsGroup.height != 26){
					TweenMax.to(simulatorsGroup, 0.3, {height:26})
				}
			}
			
		]]>
	</fx:Script>
	
	<s:Group id="clickConnected" buttonMode="true" height="26" left="5" right="5" top="5"
			 click="clickConnected_clickHandler(event)" filters="{dropShadowFilter}">
		<s:Rect width="100%" height="100%" radiusX="3">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0xFFFFFF"/>
					<s:GradientEntry color="0xDADADA"/>
				</s:LinearGradient>
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke color="#ffffff" weight="1"/>
			</s:stroke>
		</s:Rect>
		<s:HGroup width="100%" paddingLeft="7" paddingRight="10" verticalCenter="0" verticalAlign="middle" gap="3">
			<s:Label fontSize="13" text="Connected devices" fontWeight="bold"/>
		</s:HGroup>
	</s:Group>
	
	<s:VGroup top="38" left="10" right="10" bottom="30" gap="3">
		<s:VGroup filters="{AndroidDeviceRenderer.dropShadowFilterMiddle}" gap="3" paddingTop="10"
				  visible="{connectedDevices.devices.length==0}" includeInLayout="{connectedDevices.devices.length==0}">
			<s:Label fontWeight="bold" 
					 text="No devices found"/>
			<s:Label fontStyle="italic" fontSize="11"
					 text="(Connect devices with usb cable to this station)"/>
		</s:VGroup>

		<s:Spacer height="4"/>
		<s:List width="100%" height="100%"
				alternatingItemColors="[#efefef, #dedede]" borderVisible="false"
				contentBackgroundAlpha="0.0" dataProvider="{connectedDevices.devices}"
				itemRenderer="renderer.AndroidDeviceRenderer"/>
	</s:VGroup>

	<s:Group id="simulatorsGroup" left="5" right="5" bottom="5" height="26">

		<s:Rect left="1" right="1" top="0" bottom="0">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0xFFFFFF"/>
					<s:GradientEntry color="0xDADADA"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		<s:Group id="clickGroup" buttonMode="true" height="26" width="100%"
				 click="clickGroup_clickHandler(event)" filters="{dropShadowFilter}">
			<s:Rect id="backRect" width="100%" height="100%" radiusX="3">
				<s:fill>
					<s:LinearGradient id="gradientButton" rotation="90">
						<s:GradientEntry color="0xFFFFFF"/>
						<s:GradientEntry color="0xDADADA"/>
					</s:LinearGradient>
				</s:fill>
				<s:stroke>
					<s:SolidColorStroke id="stroke2" color="#ffffff" weight="1"/>
				</s:stroke>
			</s:Rect>
			<s:HGroup id="subGroup" width="100%" paddingLeft="7" paddingRight="10" verticalCenter="0" verticalAlign="middle" gap="3">
				<s:Label fontSize="13" text="Simulators" fontWeight="bold"
						 filters="{AndroidDeviceRenderer.dropShadowFilterMiddle}"/>
			</s:HGroup>
		</s:Group>
		
		<s:List width="100%" top="30" bottom="0"
				alternatingItemColors="[#efefef, #dedede]" borderVisible="false"
				contentBackgroundAlpha="0.0" dataProvider="{simulators}"
				itemRenderer="renderer.SimulatorDeviceRenderer"/>
	</s:Group>
	
	
</s:WindowedApplication>
