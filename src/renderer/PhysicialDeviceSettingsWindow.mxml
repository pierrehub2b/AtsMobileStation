<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="300" title="Settings"
			   skinClass="skins.AppleDevWindowSkin"
			   close="closeHandler(event)"
			   creationComplete="creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			
			import helpers.PortSwitcher;
			
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import device.RunningDevice;
			
			import servers.http.HttpServer;
			
			[Embed(source="/assets/icons/16/apple_site.png")]
			private const AppleIcon:Class;
			
			[Embed(source="/assets/icons/16/info.png")]
			private const InfoIcon:Class;
			
			public var dev:RunningDevice;
			public var arrayString:Array;
			public var arrayStringDevTeam:Array;
			
			public var devices:Array = [];
			
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				devTeamId.text = FlexGlobals.topLevelApplication.getTeamId();
				desc.text = FlexGlobals.topLevelApplication.peerGroup.description;
				nm.text = FlexGlobals.topLevelApplication.peerGroup.name;
			}
			
			private function closeHandler(event:CloseEvent):void {
				PopUpManager.removePopUp(this);
			}
			
			protected function save_clickHandler(event:MouseEvent):void {
				var file:File = FlexGlobals.topLevelApplication.settingsFile;
				var fileStream:FileStream = new FileStream();
				fileStream.open(file, FileMode.WRITE);
				fileStream.writeUTFBytes("development_team==" + devTeamId.text + "\n");
				fileStream.close();
				FlexGlobals.topLevelApplication.setTeamId(devTeamId.text);
				FlexGlobals.topLevelApplication.restartIosDevices();
				
				FlexGlobals.topLevelApplication.saveValues(desc.text, nm.text);
				
				PopUpManager.removePopUp(this);
			}
			
			private var userDir:File;
			
			protected function install_clickHandler(event:MouseEvent):void {
				userDir = File.userDirectory;
				var typeFilter:FileFilter = new FileFilter("App file", "*.apk; *.app");
				
				userDir.addEventListener(Event.SELECT, fileSelected, false, 0, true);
				userDir.browse([typeFilter]);
			}
			
			private function fileSelected(ev:Event):void {
				userDir.removeEventListener(Event.SELECT, fileSelected);
				
				process = new NativeProcess();
				procInfo = new NativeProcessStartupInfo();
				
				procInfo.executable = new File("/usr/bin/xcrun");
				procInfo.workingDirectory = File.userDirectory;
				
				process.addEventListener(NativeProcessExitEvent.EXIT, onInstallExit, false, 0, true);
				process.addEventListener(ProgressEvent.STANDARD_ERROR_DATA, onOutputError, false, 0, true);
				process.addEventListener(ProgressEvent.STANDARD_OUTPUT_DATA, onOutput, false, 0, true);
				
				procInfo.arguments = new <String>["simctl", "install", dev.id, userDir.nativePath];
				process.start(procInfo);
				
				enabled = false;
			}
			
			protected function onOutputError(event:ProgressEvent):void {
				trace(process.standardError.readUTFBytes(process.standardError.bytesAvailable));
			}
			
			protected function onOutput(event:ProgressEvent):void {
				trace(process.standardOutput.readUTFBytes(process.standardOutput.bytesAvailable));
			}
			
			protected function onInstallExit(event:NativeProcessExitEvent):void {
				process.removeEventListener(NativeProcessExitEvent.EXIT, onInstallExit);
				process = null;
				procInfo = null;
				userDir = null;
				
				enabled = true;
			}
			
			private var process:NativeProcess;
			private var procInfo:NativeProcessStartupInfo;
			
			protected function copyId_clickHandler(event:MouseEvent):void {
				var file:FileReference = new FileReference();
				var txtInput:String = "Device ID\tDevice Name\tDevice Platform\n";
				for each(var d:RunningDevice in devices) {
					if (d.manufacturer == "Apple") {
						txtInput += d.id + "\t" + d.modelName + "\tios\n";
					}
				}
				file.save(txtInput, "devices.txt")
			}
			
			protected function linkbutton_clickHandler(event:MouseEvent):void {
				navigateToURL(new URLRequest("https://developer.apple.com/account/"));
			}
			
			protected function linkbuttonAts_clickHandler(event:MouseEvent):void {
				navigateToURL(new URLRequest("https://github.com/pierrehub2b/AtsMobileStation#ios-devices"));
			}
			
			protected function setAutomaticPort(event:MouseEvent):void {
				var availablePort:int = PortSwitcher.getAvailableLocalPort()
				HttpServer.getInstance().listen(availablePort, handleHttpServerError)
			}
			
			protected function setSpecificPort(event:MouseEvent):void {
				webServerErrorLabel.visible = false
				
				var specificPort:int = int(webServerPort.text)
				HttpServer.getInstance().listen(specificPort, handleHttpServerError)
			}
			
			protected function handleHttpServerError(error:Error):void {
				webServerErrorLabel.visible = true
				webServerErrorLabel.text = error.message
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup left="6" right="6" top="10" bottom="36" gap="2" horizontalAlign="left"
			  verticalAlign="middle">
		<s:Label fontWeight="bold" text="Mobile station name"/>
		<s:TextInput id="nm" width="100%"/>
		<s:Spacer height="6"/>
		<s:Label fontWeight="bold" text="Mobile station description"/>
		<s:TextArea id="desc" width="100%" height="60"/>
		<s:Spacer height="6"/>
		<s:Label fontWeight="bold" text="Web server"/>
		<s:HGroup width="100%" gap="3" verticalAlign="middle" verticalCenter="0">
			<s:TextInput id="webServerPort" width="60" height="100%" maxChars="5" text="{HttpServer.getInstance().port}"/>
			<s:Button width="100" label="Refresh" fontStyle="normal" fontSize="11" click="setSpecificPort(event)"/>
		</s:HGroup>
		<s:Label id="webServerErrorLabel" paddingLeft="5" width="100%" fontStyle="normal" fontSize="11" color="red" visible="false"/>
		
		<mx:HRule height="6" width="100%"/>
		
		<s:HGroup width="100%" gap="3" paddingLeft="5" verticalAlign="middle" verticalCenter="0">
			<s:Label fontWeight="bold" paddingRight="5" text="Development team ID :"/>
			<s:TextInput id="devTeamId" width="100%" height="100%" maxChars="10"/>
		</s:HGroup>
		<s:Spacer height="4"/>
		<mx:LinkButton width="100%" label="ATS MobileStation configuration site" fontStyle="normal" fontSize="11"
					   textAlign="left" click="linkbuttonAts_clickHandler(event)" icon="{InfoIcon}"/>		
		<mx:LinkButton width="100%" label="Open Apple Developer account" fontStyle="normal" fontSize="11"
					   textAlign="left" click="linkbutton_clickHandler(event)" icon="{AppleIcon}"/>
	</s:VGroup>
	
	<s:Group left="0" right="0" bottom="0" height="30">
		<s:Rect left="0" right="0" top="0" bottom="0" alpha="0.5">
			<s:fill>
				<s:LinearGradient rotation="-10">
					<s:GradientEntry color="0xbcc1c4"/>
					<s:GradientEntry color="0xced0d2"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		
		<s:HGroup left="5" right="5" gap="2" horizontalAlign="center" verticalCenter="0">
			<s:Button label="Export device list" icon="assets/icons/16/copy.png" click="copyId_clickHandler(event)"/>
			<s:Button label="Finish" click="save_clickHandler(event)" fontSize="11"
					  icon="assets/icons/16/tick.png"/>
		</s:HGroup>
	</s:Group>
</s:TitleWindow>
