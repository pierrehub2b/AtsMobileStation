<?xml version="1.0"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  filters="{dropShadow}" xmlns:panels="com.caipture.gui.panels.*" xmlns:buttons="com.caipture.gui.buttons.*"
		  gap="0" width="220" height="186"
		  creationComplete="creationCompleteHandler(event)">
	
	<panels:TitlePanel id="inputPanel" label="Genymotion credentials" height="100%" width="100%"/>
	
	<panels:BottomButtons width="100%">
		<!-- <buttons:SmallButton label="Ok" click="setCredentials()" fontSize="14"/> -->
		<buttons:SmallButton label="Cancel" click="cancelButtonHandler(event)" fontSize="14"/>
	</panels:BottomButtons>
	
	<fx:Script>
		<![CDATA[			
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import flash.filters.BitmapFilterQuality;
			import spark.filters.DropShadowFilter;
			
			public static const dropShadow:DropShadowFilter = new DropShadowFilter(4.0, 45, 0x000000, 0.4, 8.0, 8.0, 0.9, BitmapFilterQuality.HIGH, false, false, false);
			
			public var successCallback:Function;
			public var cancelCallback:Function;
			
			private var content:CredentialsForm;
			
			private function cancelButtonHandler(event:MouseEvent):void {
				if (cancelCallback != null) {
					cancelCallback(this)
				} else {
					PopUpManager.removePopUp(this)
				}
			}
			
			/* private function setCredentials():void {
				
				content.enabled = false;
				
				var login:String = content.login
				var password:String = content.password
				
				if (login.length > 0 &&  password.length > 0) {
					
					var alert:CredentialsAlert = this
					GmsaasManager.getInstance().login(login, password, function(result:Object, error:String):void {
						//infoLabel.text = null
						
						if (error) {
							content.enabled = true;
							//errorLabel.text = error
							return
						}
						
						if (successCallback == null) {
							trace("WARNING : Credentials alert success callback not set")
							return
						}
						
						successCallback(alert)
					})
				}
				
				//infoLabel.text = "Connecting..."
			} */
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				content = new CredentialsForm();
				content.addEventListener("enterKey", enterKeyHandler, false, 0, true);
				inputPanel.addContent(content);
			}
			
			private function enterKeyHandler(ev:Event):void{
				content.removeEventListener("enterKey", enterKeyHandler);
				// setCredentials()
			}
			
		]]>
	</fx:Script>
	
</s:VGroup>
