<?xml version="1.0"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  filters="{dropShadow}" xmlns:panels="com.caipture.gui.panels.*" xmlns:buttons="com.caipture.gui.buttons.*"
		  gap="0" width="220" height="186"
		  creationComplete="creationCompleteHandler(event)">
	
	<panels:TitlePanel id="inputPanel" label="Genymotion credentials" height="100%" width="100%"/>
	
	<panels:BottomButtons width="100%">
		<buttons:SmallButton label="Ok" click="setCredentials()" fontSize="14"/>
		<buttons:SmallButton label="Cancel" click="cancelButtonHandler(event)" fontSize="14"/>
	</panels:BottomButtons>
	
	<fx:Script>
		<![CDATA[
			import com.ats.managers.gmsaas.GmsaasManager;
			import com.ats.managers.gmsaas.GmsaasManagerEvent;
			
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			
			import spark.components.Alert;
			import spark.filters.DropShadowFilter;
			import flash.filters.BitmapFilterQuality;
			
			public static const dropShadow:DropShadowFilter = new DropShadowFilter(4.0, 45, 0x000000, 0.4, 8.0, 8.0, 0.9, BitmapFilterQuality.HIGH, false, false, false);
			
			private var content:CredentialsContent;
			
			private function cancelButtonHandler(event:MouseEvent):void {
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE, false, false, Alert.CANCEL));
			}
			
			private function setCredentials():void {

				var login:String = content.login
				var password:String = content.password
				
				if (login.length > 0 &&  password.length > 0) {
					
					content.enabled = false;
					
					var manager:GmsaasManager = new GmsaasManager()
					manager.addEventListener(GmsaasManagerEvent.ERROR, credentialErrorHandler, false, 0, true);
					manager.addEventListener(GmsaasManagerEvent.COMPLETED, credentialCompletedHandler, false, 0, true);
					manager.login(login, password);
					
					
					/*var alert:CredentialsAlert = this
					GmsaasManager.getInstance().login(login, password, function(result:Object, error:String):void {
						//infoLabel.text = null
						
						if (error) {
							content.enabled = true;
							//errorLabel.text = error
							return
						}
						
						if (successCallback == null) {
							trace("WARNING : Credentials alert success callback not set")
							return
						}
						
						successCallback(alert)
					})*/
				}
				
				//infoLabel.text = "Connecting..."
			}
			
			private function credentialErrorHandler(ev:GmsaasManagerEvent):void{
				ev.currentTarget.removeEventListener(GmsaasManagerEvent.ERROR, credentialErrorHandler);
				ev.currentTarget.removeEventListener(GmsaasManagerEvent.COMPLETED, credentialCompletedHandler);

				content.error = ev.error;
			}
			
			private function credentialCompletedHandler(ev:GmsaasManagerEvent):void{
				ev.currentTarget.removeEventListener(GmsaasManagerEvent.ERROR, credentialErrorHandler);
				ev.currentTarget.removeEventListener(GmsaasManagerEvent.COMPLETED, credentialCompletedHandler);
				dispatchEvent(new CloseEvent(CloseEvent.CLOSE, false, false, Alert.YES));
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				content = new CredentialsContent();
				content.addEventListener("enterKey", enterKeyHandler, false, 0, true);
				inputPanel.addContent(content);
			}
			
			private function enterKeyHandler(ev:Event):void{
				content.removeEventListener("enterKey", enterKeyHandler);
				setCredentials()
			}
			
		]]>
	</fx:Script>
	
</s:VGroup>
