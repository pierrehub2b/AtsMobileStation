<?xml version="1.0" encoding="utf-8"?>
<renderer:SimulatorRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
							xmlns:s="library://ns.adobe.com/flex/spark"
							xmlns:renderer="com.ats.gui.renderer.*"
							creationComplete="creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
        import com.ats.device.Device;
        import com.ats.device.simulator.IosSimulator;
        import com.ats.device.simulator.Simulator;
        import com.ats.device.simulator.genymotion.GenymotionSaasSimulator;
        import com.greensock.TweenMax;
        
        import flash.filters.BitmapFilterQuality;
        
        import mx.events.FlexEvent;
        
        import spark.filters.ColorMatrixFilter;
        import spark.filters.DropShadowFilter;

        public static const dropShadowFilterMiddle:DropShadowFilter = new DropShadowFilter(4.0, 45, 0x000000, 0.2, 8.0, 8.0, 0.9, BitmapFilterQuality.HIGH, false, false, false);
        private static const greyFilter:ColorMatrixFilter = new ColorMatrixFilter([0.3, 0.59, 0.11, 0, 0, 0.3, 0.59, 0.11, 0, 0, 0.3, 0.59, 0.11, 0, 0, 0, 0, 0, 1, 0]);

        protected function startStopButton_clickHandler(event:MouseEvent):void {
            sim.startStop()
        }

        protected function button_rollOverHandler(event:MouseEvent):void {
            if (sim.status == Simulator.RUNNING) {
                showOverButton("turnoff");
            } else if (sim.status == Simulator.OFF && !(data is GenymotionSaasSimulator)) {
                showOverButton("turnon");
            }
        }

        private function showOverButton(value:String):void {
            overButton.source = "assets/icons/24/" + value + ".png";
            overButton.visible = true;
            TweenMax.fromTo(overButton, 0.2, {alpha: 0.0}, {alpha: 1.0})
        }

        protected function button_rollOutHandler(event:MouseEvent):void {
            overButton.visible = false;
        }

        protected function removedFromStageHandler(event:Event):void {
            mainGroup.filters = []
        }

        protected function creationCompleteHandler(event:FlexEvent):void {
            overButton.visible = false;
        }
        ]]>
	</fx:Script>
	<s:Rect	left="0" right="0" top="1" bottom="1" alpha="0.2" radiusX="0" radiusY="0">
		<s:fill>
			<s:LinearGradient id="grad" rotation="-90">
				<s:GradientEntry id="colorTop" color="0x5a636c"/>
				<s:GradientEntry id="colorBottom" color="0x171e28"/>
			</s:LinearGradient>
		</s:fill>
		<s:stroke>
			<s:LinearGradientStroke rotation="90">
				<s:GradientEntry id="stroke1" color="0x6e7780"/>
				<s:GradientEntry id="stroke2" color="0x0f1217"/>
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>
	<s:HGroup id="mainGroup" width="100%" verticalAlign="middle" verticalCenter="0"
			  paddingRight="6" paddingLeft="5" filters="{dropShadowFilterMiddle}"
			  rollOver="button_rollOverHandler(event)" rollOut="button_rollOutHandler(event)">
		<s:HGroup id="firstGroup" verticalAlign="middle" buttonMode="true" gap="0">
			<s:BitmapImage id="osBitmap" left="6" smooth="true" smoothingQuality="high"
						   source="assets/icons/32/{data is IosSimulator?'ios':'android'}.png"
						   filters="{(data as Simulator).status==Simulator.RUNNING?[]:[greyFilter]}"/>
			<s:VGroup gap="3" mouseEnabled="false" verticalAlign="bottom" height="100%">
				<s:Label text="{sim.modelName}" fontWeight="bold" color="{(data as Simulator).status==Simulator.OFF?0x968ca3:0x113b55}" maxWidth="234" maxDisplayedLines="1"/>

				<s:HGroup color="#e4e7e9">
					<s:Label text="{sim.osVersion}" fontSize="11" fontStyle="italic"/>
					<s:Label text="- Genymotion" fontSize="11" fontStyle="italic" visible="{data is GenymotionSaasSimulator}"/>
				</s:HGroup>
			</s:VGroup>
		</s:HGroup>
		
		<s:Spacer width="100%"/>
		<s:BitmapImage source="assets/icons/24/link.png"
					   visible="{data is GenymotionSaasSimulator &amp;&amp; (data as GenymotionSaasSimulator).owned}"/>
		<s:Group buttonMode="true" click="startStopButton_clickHandler(event)" height="24" width="24"
				 toolTip="{(data as Simulator).tooltip}" enabled="{(data as Simulator).status!=Device.INSTALL}">
			<s:BitmapImage id="iconStatus" source="assets/icons/24/{(data as Simulator).status}.png" smooth="true" smoothingQuality="high"/>
			<s:BitmapImage id="overButton" source="assets/icons/24/turnoff.png" smooth="true" smoothingQuality="high"/>
		</s:Group>
	</s:HGroup>

</renderer:SimulatorRenderer>