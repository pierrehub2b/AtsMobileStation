<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:buttons="com.caipture.gui.buttons.*" 
		  xmlns:text="com.caipture.gui.text.*" gap="10" xmlns:panels="com.caipture.gui.panels.*">
	
	<fx:Script>
		<![CDATA[
			import com.ats.gui.alert.CredentialsAlert;
			import com.ats.helpers.Settings;
			import com.ats.managers.GenymotionManager;
			import com.ats.managers.gmsaas.GmsaasInstaller;
			import com.ats.managers.gmsaas.GmsaasInstallerErrorEvent;
			import com.ats.managers.gmsaas.GmsaasInstallerProgressEvent;
			import com.ats.managers.gmsaas.GmsaasProcess;
			import com.ats.tools.PeerGroupConnection;
			import com.ats.tools.Python;

			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;

			import spark.components.Alert;
			
			[Bindable]
			public var edit:Boolean = false;
			
			public function reload(peer:PeerGroupConnection):void {
				msName.text = peer.name;
				msDescription.text = peer.description;
				
				pythonFolderPath.text = Python.folder.nativePath
				genyPanel.clearMessage()
					
				gmsaas = GmsaasProcess.gmsaasExec != null
			}
			
			private function set gmsaas(value:Boolean):void {
				gmsaasUninstallButton.enabled = value
				gmsaasInstallButton.enabled = !value
				gmsaasCredentialsButton.enabled = value
			}
			
			protected function installGmsaas(event:Event):void {
				genyPanel.infoMessage = "Installing ..."
				edit = true;
				
				var installer:GmsaasInstaller = new GmsaasInstaller()
				installer.addEventListener(GmsaasInstallerErrorEvent.ERROR, installerErrorHandler);
				installer.addEventListener(GmsaasInstallerProgressEvent.PROGRESS, installerProgressHandler);
				installer.install()
			}

			protected function prepareGmsaasUninstall(event:Event):void {
				genyPanel.infoMessage = "Uninstalling ..."
				edit = true;

				var genymotionManager:GenymotionManager = FlexGlobals.topLevelApplication.genymotionManager
				genymotionManager.addEventListener(Event.COMPLETE, genymotionTerminated)
				genymotionManager.terminate()
			}

			private function genymotionTerminated(event:Event):void {
				(event.currentTarget as GenymotionManager).removeEventListener(Event.COMPLETE, genymotionTerminated)

				var installer:GmsaasInstaller = new GmsaasInstaller()
				installer.addEventListener(GmsaasInstallerErrorEvent.ERROR, installerErrorHandler);
				installer.addEventListener(GmsaasInstallerProgressEvent.PROGRESS, installerProgressHandler);
				installer.uninstall()
			}
			
			private function installerErrorHandler(event:GmsaasInstallerErrorEvent):void {
				var installer:GmsaasInstaller = event.currentTarget as GmsaasInstaller
				installer.removeEventListener(GmsaasInstallerErrorEvent.ERROR, installerErrorHandler);
				installer.removeEventListener(GmsaasInstallerProgressEvent.PROGRESS, installerProgressHandler);
				
				genyPanel.infoMessage = event.error.message
				edit = false;
			}
			
			private function installerProgressHandler(event:GmsaasInstallerProgressEvent):void {
				var installer:GmsaasInstaller = event.currentTarget as GmsaasInstaller
				genyPanel.infoMessage = event.state
					
				switch (event.state) {
					case GmsaasInstaller.GMSAAS_INSTALLER_STATE_INSTALL_COMPLETED:
						installer.removeEventListener(GmsaasInstallerErrorEvent.ERROR, installerErrorHandler);
						installer.removeEventListener(GmsaasInstallerProgressEvent.PROGRESS, installerProgressHandler);
						
						installCredentials();					
						
						break;
					case GmsaasInstaller.GMSAAS_INSTALLER_STATE_UNINSTALL_COMPLETED:
						installer.removeEventListener(GmsaasInstallerErrorEvent.ERROR, installerErrorHandler);
						installer.removeEventListener(GmsaasInstallerProgressEvent.PROGRESS, installerProgressHandler);
						
						genyPanel.infoMessage = ""
						gmsaas = false
						FlexGlobals.topLevelApplication.genymotionActivated = false
						
						edit = false;
						break
				}
			}
			
			private function installCredentials():void{
				const credentialsAlert:CredentialsAlert = new CredentialsAlert();
				credentialsAlert.addEventListener(CloseEvent.CLOSE, installCredentialsHandler, false, 0, true);
				ModalPopupManager.addPopup(this, credentialsAlert);
			}
			
			private function installCredentialsHandler(ev:CloseEvent):void{
				ev.currentTarget.removeEventListener(CloseEvent.CLOSE, installCredentialsHandler);
				ModalPopupManager.removePopup(ev.currentTarget as CredentialsAlert);
				edit = false;
				
				if(ev.detail == Alert.YES){
					gmsaas = true
					FlexGlobals.topLevelApplication.genymotionActivated = true;
				}else{
					new GmsaasInstaller().uninstall();
					genyPanel.infoMessage = "Install aborted !"
				}
			}
			
			protected function editCredentials(event:Event):void {
				
				edit = true;
				
				const credentialsAlert:CredentialsAlert = new CredentialsAlert();
				credentialsAlert.addEventListener(CloseEvent.CLOSE, credentialsCompleteHandler, false, 0, true);
				
				ModalPopupManager.addPopup(this, credentialsAlert);
			}
			
			private function credentialsCompleteHandler(ev:CloseEvent):void {
				edit = false
				ModalPopupManager.removePopup(ev.currentTarget as CredentialsAlert);
			}
			
			public function get localName():String {
				return msName.text
			}
			
			public function get description():String {
				return msDescription.text
			}
			
			/*protected function loadPythonPath_clickHandler(event:MouseEvent):void {
				var directory:File = Settings.defaultAppFolder;
				directory.addEventListener(Event.SELECT, pythonFolderSelected);
				directory.browseForDirectory("Select Python directory");
			}*/
			
			/*protected function pythonFolderSelected(event:Event):void {
				event.currentTarget.removeEventListener(Event.SELECT, pythonFolderSelected);
				Settings.getInstance().pythonFolder = event.target as File
				pythonFolderPath.text = Settings.getInstance().pythonPath
			}*/
			
			protected function linkAts_clickHandler(event:MouseEvent):void
			{
				navigateToURL(new URLRequest("https://github.com/pierrehub2b/AtsMobileStation#ios-devices"));
			}
			
			protected function linkGeny_clickHandler(event:MouseEvent):void
			{
				navigateToURL(new URLRequest("https://www.genymotion.com/"));
			}
			
			protected function python_clickHandler(event:MouseEvent):void
			{
				navigateToURL(new URLRequest("https://www.python.org/downloads/"));
			}
			
			protected function amsDownload_clickHandler(event:MouseEvent):void
			{
				if(Settings.isMacOs){
					navigateToURL(new URLRequest("http://www.actiontestscript.com/drivers/mobile/macos/AtsMobileStation.zip"));
				}else{
					navigateToURL(new URLRequest("http://www.actiontestscript.com/drivers/mobile/windows/AtsMobileStation.zip"));
				}
			}
			
		]]>
	</fx:Script>
	<text:InputText id="msName" label="Mobile Station name" width="100%"/>
	<text:InputText id="msDescription" label="Description" width="100%" lines="4"/>
	<s:Spacer height="6"/>
	<s:HGroup width="100%" verticalAlign="bottom">
		<text:InputText id="pythonFolderPath" label="Python folder" width="100%" editable="false"/>
		<!--<buttons:SmallButton click="loadPythonPath_clickHandler(event)"/>-->
	</s:HGroup>
	<s:Spacer height="6"/>
	<s:Group width="100%">
		<panels:InsetPanel id="genyPanel" label="Genymotion Cloud" width="100%" height="100%"/>
		<s:HGroup width="100%" top="26" paddingLeft="7" paddingRight="5" paddingBottom="5" horizontalAlign="center">
			<buttons:SmallButton id="gmsaasInstallButton" label="Install components" click="installGmsaas(event)" fontSize="12"/>
			<buttons:SmallButton id="gmsaasCredentialsButton" label="Set credentials" click="editCredentials(event)" fontSize="12"/>
			<buttons:SmallButton id="gmsaasUninstallButton" label="Uninstall" click="prepareGmsaasUninstall(event)" fontSize="12"/>
		</s:HGroup>
	</s:Group>
	<s:Spacer height="14"/>
<!--	<text:InputText label="Apple development team ID" width="100%" enabled="false"/>
	<mx:LinkButton width="100%" label="Apple Developer account" fontStyle="normal" fontSize="14"
				   textAlign="left" color="0xadb5bd" enabled="false"/>-->
	
	<s:VGroup color="#adb5bd" gap="4">
		<s:Label text="Useful links" fontWeight="bold"/>
		<s:Spacer height="2"/>
		<mx:LinkButton width="100%" paddingLeft="5" label="ATS MobileStation configuration" fontStyle="normal" fontSize="14"
					   textAlign="left" click="linkAts_clickHandler(event)"/>
		<mx:LinkButton width="100%" paddingLeft="5" label="Genymotion Android simulators" fontStyle="normal" fontSize="14"
					   textAlign="left" click="linkGeny_clickHandler(event)"/>
		<mx:LinkButton width="100%" paddingLeft="5" label="Python download page" fontStyle="normal" fontSize="14"
					   textAlign="left" click="python_clickHandler(event)"/>
		<mx:LinkButton width="100%" paddingLeft="5" label="Download latest version of MobileStation" fontStyle="normal" fontSize="14"
					   textAlign="left" click="amsDownload_clickHandler(event)"/>
	</s:VGroup>



</s:VGroup>