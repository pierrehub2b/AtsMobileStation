<?xml version="1.0" encoding="UTF-8"?>
<project name="mobilestation" basedir="." default="package-bundle">
	
	<property file="build.properties" description=""/>
	<property file="flexSdkPath.properties" description=""/>

	<condition property="isMac">
		<os family="mac"/>
	</condition>

	<condition property="isWindows">
		<os family="windows" />
	</condition>

	<target name="initWindowsProperties" if="isWindows">
		<property name="FLEX_HOME" value="${FLEX_SDK_WIN}" />
	</target>

	<target name="initMacOsProperties" if="isMac">
		<property name="FLEX_HOME" value="${FLEX_SDK_MACOS}" />
	</target>

	<target name="prepareBuildMacos" if="isMac">
		<unzip src="tools/android/macos/adb.zip" dest="src/assets/tools/android"/>
		<unzip src="tools/monaserver/macos/monaserver.zip" dest="src/assets/tools"/>
		<copy file="tools/monaserver/libluajit-5.1.2.dylib" todir="src/assets/tools/monaserver"/>
	</target>

	<target name="prepareBuildWindows" if="isWindows">

	</target>

	<target name="configure" depends="initMacOsProperties,initWindowsProperties">
		<echo message="Prepare OS dependent libs and components"/>
		<delete dir="src/assets/tools/android"/>
		<delete dir="src/assets/tools/monaserver/MonaBase"/>
		<delete dir="src/assets/tools/monaserver/MonaCore"/>
		<delete dir="src/assets/tools/monaserver/server/Monaserver.exe"/>
		<delete dir="src/assets/tools/monaserver/server/MonaServer"/>

		<antcall target="prepareBuildMacos"/>
		<antcall target="prepareBuildWindows"/>
	</target>

	<target name="init.sdk" depends="configure">
		<echo message="Using SDK -> ${FLEX_HOME}"/>
		<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />
		<condition property="package.type" value="bundle">
			<matches string="${ant.project.invoked-targets}" pattern="^package-bundle$"/>
		</condition>
		<property name="package.type" value="normal"/>
	</target>
	
	<target name="copy.tools" description="Copy adb tools OS dependent">
	</target>
	
	<target name="compile.project" description="" depends="init.sdk">

		<delete failonerror="false" includeemptydirs="true" removeNotFollowedSymlinks="true">
			<fileset file="release/AtsMobileStation.app/Contents/Frameworks/Adobe AIR.framework/Resources"
					 followsymlinks="false"/>
			<fileset dir="release" defaultexcludes="false"/>
			<fileset dir="temp"/>
		</delete>

		<mkdir dir="temp"/>
		<mkdir dir="release"/>

		<echo message="Application type -> '${package.type}'"/>

		<mxmlc file="src/${APP_NAME}.mxml"
            output="temp/${APP_NAME}.swf"
            static-rsls="true"
            accessible="false"
            configname="air"
            debug="false"
            failonerror="true"
            fork="true"
            maxmemory="512m"
        	as3="true"
        	optimize="true"
        	strict="true"
        	use-gpu="false"
        	warnings="false"
        	default-frame-rate="60">
        	<source-path path-element="src"/>
            <external-library-path file="${FLEX_HOME}/frameworks/libs/air/airglobal.swc" append="true"/>
            <library-path dir="libs" includes="*.swc" append="true"/>
        	<include-resource-bundles>labels</include-resource-bundles>
        	<include-resource-bundles>short_labels</include-resource-bundles>
        	<include-resource-bundles>tooltips</include-resource-bundles>
			<define name="APPLICATION::type" value="'${package.type}'"/>
        </mxmlc>
		
		<copy todir="temp/assets">
			<fileset dir="src/assets"/>
		</copy>
		
		<copy file="src/${APP_NAME}-app.xml" tofile="temp/${APP_NAME}-app.xml"/>
		
		<replaceregexp 
		   file="src/${APP_NAME}-app.xml" 
		   match="&lt;versionNumber&gt;(.*)&lt;/versionNumber&gt;"
		   replace="&lt;versionNumber&gt;${APP_VERSION}&lt;/versionNumber&gt;">
		</replaceregexp>
			
		<replaceregexp 
		   file="temp/${APP_NAME}-app.xml" 
		   match="&lt;versionNumber&gt;(.*)&lt;/versionNumber&gt;"
		   replace="&lt;versionNumber&gt;${APP_VERSION}&lt;/versionNumber&gt;">
		</replaceregexp>
			
		<replaceregexp 
		   file="temp/${APP_NAME}-app.xml" 
		   match="&lt;content&gt;(.*)&lt;/content&gt;"
		   replace="&lt;content&gt;${APP_NAME}.swf&lt;/content&gt;">
		</replaceregexp>

	</target>
		
	<target name="package" depends="init.sdk, compile.project, copy.tools"> 
		
		<delete file="../release/${APP_NAME}.exe"/>
		
	    <java jar="${FLEX_HOME}/lib/adt.jar" fork="true" failonerror="true" dir="temp"> 
	    	<arg value="-package"/> 
	    	<arg value="-storetype"/> 
	        <arg value="pkcs12"/> 
	        <arg value="-keystore"/> 
	        <arg value="../cert.p12"/>
	    	<arg value="-storepass"/>
	    	<arg value="${PASSWORD}"/>
	        <arg value="-target"/> 
	        <arg value="native"/>
	    	<arg value="../release/${APP_NAME}"/>
	        <arg value="${APP_NAME}-app.xml"/> 
	    	<arg value="."/> 
	    </java> 
	</target>

	<target name="package-bundle" depends="init.sdk, compile.project, copy.tools">

		<java jar="${FLEX_HOME}/lib/adt.jar" fork="true" failonerror="true" dir="temp">
			<arg value="-package"/>
			<arg value="-storetype"/>
			<arg value="pkcs12"/>
			<arg value="-keystore"/>
			<arg value="../cert.p12"/>
			<arg value="-storepass"/>
			<arg value="${PASSWORD}"/>
			<arg value="-target"/>
			<arg value="bundle"/>
			<arg value="../release/${APP_NAME}"/>
			<arg value="${APP_NAME}-app.xml"/>
			<arg value="."/>
		</java>

		<antcall target="zipWindows"/>
		<antcall target="zipMacos"/>

	</target>

	<target name="zipWindows" if="isWindows">
		<zip destfile="release/${APP_NAME}.zip"
				     basedir="release/${APP_NAME}"/>
	</target>

	<target name="zipMacos" if="isMac">
		<exec executable="ditto" dir="release">
			<arg value="-c" />
			<arg value="-k" />
			<arg value="--sequesterRsrc" />
			<arg value="--keepParent" />
			<arg value="${APP_NAME}.app" />
			<arg value="${APP_NAME}.zip" />
		</exec>
	</target>

	<target name="package-all"> 
		<antcall target="package"/>
		<antcall target="package-bundle"/>
	</target>
</project>